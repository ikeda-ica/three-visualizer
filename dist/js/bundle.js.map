{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/react/index.js","webpack:///./node_modules/object-assign/index.js","webpack:///./src/js/app.tsx","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/scheduler/index.js","webpack:///./node_modules/scheduler/cjs/scheduler.production.min.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/three/build/three.module.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","arguments","length","React","ReactDOM","THREE","render","createElement","props","canvas","handleSuccess","stream","audioCtx","window","AudioContext","webkitAudioContext","createMediaStreamSource","processor","createScriptProcessor","analyser","createAnalyser","fftSize","bufferLength","dataArray","Uint8Array","getByteTimeDomainData","connect","destination","width","height","renderer","WebGLRenderer","setSize","camera","PerspectiveCamera","position","set","lookAt","scene","Scene","axes","AxesHelper","add","setPixelRatio","devicePixelRatio","setClearColor","geometry","Geometry","verticesNeedUpdate","elementsNeedUpdate","dot","material","PointsMaterial","size","sizeAttenuation","update3d","index","y","vertices","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","x","z","v","push","Vector3","Points","onaudioprocess","e","draw3d","useEffect","navigator","mediaDevices","getUserMedia","audio","video","then","id","ref","elm","document","getElementById","k","for","q","u","w","aa","ba","A","iterator","B","a","b","encodeURIComponent","g","h","f","Error","replace","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","this","context","refs","updater","F","G","isReactComponent","setState","forceUpdate","H","constructor","isPureReactComponent","I","current","J","K","L","__self","__source","M","children","Array","defaultProps","$$typeof","type","_owner","N","O","P","Q","pop","result","keyPrefix","func","count","R","U","S","T","isArray","next","done","=",":","escape","toString","ea","fa","V","da","W","X","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","version","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","default","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","ha","ia","onError","ja","slice","apply","la","ma","na","indexOf","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","va","wa","currentTarget","ka","xa","concat","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","Math","random","Fa","Ga","Ha","parentNode","tag","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","toLowerCase","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","style","animation","transition","Xa","Ya","Za","$a","ab","bb","cb","db","eb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","ib","eventPool","jb","destructor","hb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","extend","kb","data","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","keyCode","vb","detail","wb","zb","locale","which","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","text","time","url","week","Mb","nodeName","Nb","srcElement","correspondingUseElement","nodeType","Ob","setAttribute","Pb","Rb","_valueTracker","getOwnPropertyDescriptor","configurable","getValue","setValue","stopTracking","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","displayName","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","toUpperCase","tc","pc","isNaN","qc","test","oc","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","ownerDocument","activeElement","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","detachEvent","Kc","Lc","attachEvent","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","view","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","defaultView","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","child","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","charCode","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","location","repeat","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","addEventListener","Ed","Fd","Gd","Hd","Id","Jd","body","Kd","firstChild","Ld","node","offset","nextSibling","Nd","HTMLIFrameElement","contentWindow","href","Od","contentEditable","Qd","focusedElem","selectionRange","Md","contains","compareDocumentPosition","documentElement","start","end","selectionStart","selectionEnd","min","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","options","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","ie","je","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","trim","oe","setProperty","charAt","substring","pe","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","qe","re","is","se","blur","te","ue","ve","we","autoFocus","xe","__html","ye","setTimeout","ze","clearTimeout","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Set","Fe","Ge","He","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","payload","callback","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","state","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","zf","Af","_stringRef","Bf","Cf","Map","delete","Df","Ef","Ff","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","queue","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","action","qg","last","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","hidden","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","stack","kh","lh","mh","nh","oh","onClick","onclick","ph","WeakSet","qh","rh","sh","th","vh","componentWillUnmount","wh","xh","yh","insertBefore","_reactRootContainer","zh","wasMultiple","multiple","Ce","display","uh","hi","Xh","has","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","createTextNode","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeout","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","querySelectorAll","JSON","stringify","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","global","previous","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","Function","EventDispatcher","__webpack_exports__","WebGLMultisampleRenderTarget","WebGLRenderTargetCube","WebGLRenderTarget","ShaderLib","UniformsLib","UniformsUtils","ShaderChunk","FogExp2","Fog","Sprite","LOD","SkinnedMesh","Skeleton","Bone","Mesh","LineSegments","LineLoop","Line","Group","VideoTexture","DataTexture","DataTexture2DArray","DataTexture3D","CompressedTexture","CubeTexture","CanvasTexture","DepthTexture","Texture","AnimationLoader","CompressedTextureLoader","DataTextureLoader","CubeTextureLoader","TextureLoader","ObjectLoader","MaterialLoader","BufferGeometryLoader","DefaultLoadingManager","LoadingManager","ImageLoader","ImageBitmapLoader","FontLoader","FileLoader","Loader","LoaderUtils","Cache","AudioLoader","SpotLightShadow","SpotLight","PointLight","RectAreaLight","HemisphereLight","DirectionalLightShadow","DirectionalLight","AmbientLight","LightShadow","Light","StereoCamera","OrthographicCamera","CubeCamera","ArrayCamera","Camera","AudioListener","PositionalAudio","AudioAnalyser","Audio","VectorKeyframeTrack","StringKeyframeTrack","QuaternionKeyframeTrack","NumberKeyframeTrack","ColorKeyframeTrack","BooleanKeyframeTrack","PropertyMixer","PropertyBinding","KeyframeTrack","AnimationUtils","AnimationObjectGroup","AnimationMixer","AnimationClip","Uniform","InstancedBufferGeometry","BufferGeometry","InterleavedBufferAttribute","InstancedInterleavedBuffer","InterleavedBuffer","InstancedBufferAttribute","Face3","Object3D","Raycaster","Layers","Clock","QuaternionLinearInterpolant","LinearInterpolant","DiscreteInterpolant","CubicInterpolant","Interpolant","Triangle","_Math","Spherical","Cylindrical","Plane","Frustum","Sphere","Ray","Matrix4","Matrix3","Box3","Box2","Line3","Euler","Vector4","Vector2","Quaternion","Color","ImmediateRenderObject","VertexNormalsHelper","SpotLightHelper","SkeletonHelper","PointLightHelper","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","PositionalAudioHelper","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","Shape","Path","ShapePath","Font","CurvePath","Curve","ImageUtils","ShapeUtils","WebGLUtils","WireframeGeometry","ParametricGeometry","ParametricBufferGeometry","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","PolyhedronGeometry","PolyhedronBufferGeometry","TubeGeometry","TubeBufferGeometry","TorusKnotGeometry","TorusKnotBufferGeometry","TorusGeometry","TorusBufferGeometry","TextGeometry","TextBufferGeometry","SphereGeometry","SphereBufferGeometry","RingGeometry","RingBufferGeometry","PlaneGeometry","PlaneBufferGeometry","LatheGeometry","LatheBufferGeometry","ShapeGeometry","ShapeBufferGeometry","ExtrudeGeometry","ExtrudeBufferGeometry","EdgesGeometry","ConeGeometry","ConeBufferGeometry","CylinderGeometry","CylinderBufferGeometry","CircleGeometry","CircleBufferGeometry","BoxGeometry","BoxBufferGeometry","ShadowMaterial","SpriteMaterial","RawShaderMaterial","ShaderMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshPhongMaterial","MeshToonMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshDepthMaterial","MeshDistanceMaterial","MeshBasicMaterial","MeshMatcapMaterial","LineDashedMaterial","LineBasicMaterial","Material","Float64BufferAttribute","Float32BufferAttribute","Uint32BufferAttribute","Int32BufferAttribute","Uint16BufferAttribute","Int16BufferAttribute","Uint8ClampedBufferAttribute","Uint8BufferAttribute","Int8BufferAttribute","BufferAttribute","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","REVISION","MOUSE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","GeometryUtils","Projector","CanvasRenderer","JSONLoader","SceneUtils","LensFlare","undefined","Number","EPSILON","pow","isInteger","isFinite","floor","sign","match","output","nextKey","listener","_listeners","listeners","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","max","v1","quaternion","_canvas","LEFT","MIDDLE","RIGHT","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","_x","_y","_z","_w","elements","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","warn","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","slerp","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","euler","update","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","setFromMatrix4","applyToBufferAttribute","setXYZ","multiplyMatrices","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","rotate","translate","points","closestPoint","box","sphere","zero","one","getDataURL","image","HTMLCanvasElement","src","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","Infinity","constant","p0","p1","p2","p3","p4","p5","planes","isTexture","updateMatrix","toJSON","isRootObject","textures","metadata","generator","wrap","images","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","getW","isWebGLRenderTarget","isWebGLMultisampleRenderTarget","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","isGeometry","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","makeRotationFromQuaternion","compose","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","right","bottom","near","far","makeOrthographic","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","cloneUniforms","isColor","mergeUniforms","uniforms","merged","hslA","hslB","hsl","merge","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","string","parseFloat","exec","components","parseInt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","diffuse","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","frame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","bufferType","usage","dynamic","createBuffer","bindBuffer","bufferData","onUploadCallback","Float32Array","Float64Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Int8Array","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","materialIndex","vertexNormals","vertexColors","_order","DefaultOrder","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","layers","q1","object3DId","parent","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","isMesh","drawMode","isLine","isPoints","parameters","shape","uuids","extractFromCache","cache","values","recursive","parse","obj","geometryId","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","lineDistancesNeedUpdate","groupsNeedUpdate","itemSize","normalized","Uint8ClampedArray","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","morphAttributes","drawRange","widthSegments","heightSegments","depthSegments","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","clearGroups","setDrawRange","needsUpdate","tangent","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","boxMorphTargets","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","materialId","blending","side","flatShading","vertexTangents","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","combine","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","segCenter","segDir","barycoord","vab","vac","vbc","vap","vbp","vcp","default_vertex","default_fragment","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","origin","updateMorphTargets","WebGLBackground","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","setClear","getClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","vr","session","getSession","environmentBlendMode","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","unshift","WebGLBufferRenderer","info","capabilities","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","reset","instanceCount","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","program","objectInfluences","morphTargetInfluences","influences","influence","getUniforms","WebGLObjects","updateList","wrapR","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","d5","d6","isMeshBasicMaterial","setDrawMode","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","morphA","morphB","morphC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","getShaderInfoLog","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMapping","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","getError","diagnostics","prefix","deleteShader","getAttributes","getActiveAttrib","getAttribLocation","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","list","cameras","UniformsCache","light","halfWidth","halfHeight","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","_state","setBlending","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","WebGLState","utils","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","fov","aspect","filmGauge","filmOffset","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","matrixPosition","offsetMatrix","identityMatrix","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","frameOfReferenceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","bounds","cameraVR","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","triggers","findGamepad","gamepads","getGamepads","gamepad","startsWith","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","pressed","updateControllers","getStandingMatrix","submitFrame","WebXRManager","frameOfReference","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","rangeMin","rangeMax","message","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","initMaterial","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","activeCubeFace","activeMipMapLevel","readRenderTargetPixels","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","interleavedBuffer","levels","bindMode","bindMatrix","bindMatrixInverse","boneInverses","calculateInverses","linecap","linejoin","ol","edge","edges","slices","stacks","pu","pv","sliceCount","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","tubularSegments","radialSegments","closed","taper","bufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","tube","heightScale","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","arc","isScene","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","normalizeSkinWeights","skinWeight","bone","isBone","getBoneByName","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","scalePt2","pt","vec","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","font","isFont","generateShapes","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","grid","verticesRow","uOffset","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","segments","inverseSegments","n1","n2","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","thresholdAngle","thresholdDot","sourceVertices","face1","face2","radiusTop","radiusBottom","openEnded","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","Geometries","freeze","STANDARD","PHYSICAL","TOON","MATCAP","Materials","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","_weightPrev","_offsetPrev","_weightNext","_offsetNext","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","duration","tracks","resetDuration","parseKeyframeTrack","json","trackType","typeName","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","files","file","onLoad","onProgress","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","loading","manager","_parser","arcLengthDivisions","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","v3","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","curves","autoClose","currentPoint","power","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","decodeText","TextDecoder","decode","extractUrlBase","lastIndexOf","typedArray","TYPED_ARRAYS","bufferAttribute","drawcalls","offsets","resourcePath","setResourcePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","BlendingMode","textureLoader","materialLoader","createImageBitmap","fetch","subPaths","currentPath","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","setOptions","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","instance","eyeSep","eyeRight","eyeLeft","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","autoStart","oldTime","running","gain","createGain","timeDelta","getInput","autoplay","detune","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","panner","createPanner","frequencyBinCount","getOutput","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","xmin","xmax","eyeSepOnProjection","ymax","getElapsedTime","getDelta","newTime","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","startP","startEnd","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","root","_initMemoryManager","_accuIndex","ascSort","intersectObject","nNormals","objGeometry","cone","getBoneList","boneList","sphereSize","radials","circles","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","lightPlane","targetLine","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","headLength","headWidth","setDirection","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","RegExp","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","halfConeInnerAngle","halfConeOuterAngle","setPoint","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","geometry1","projectVector","unprojectVector","pickingRay","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","createMultiMaterialObject","detach","attach"],"mappings":"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","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n// import \"../css/style.scss\";\n\nconst App: any = (props: any) => {\n  let canvas: any;\n  let canvasCtx: any;\n  let ticker = 0;\n\n  const handleSuccess = (stream: any) => {\n// audio variable\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioCtx = new AudioContext();\n    let source = audioCtx.createMediaStreamSource(stream);\n    let processor = audioCtx.createScriptProcessor(1024, 1, 1);\n    let analyser = audioCtx.createAnalyser();\n    analyser.fftSize = 1024;\n    var bufferLength = analyser.fftSize;\n    var dataArray = new Uint8Array(bufferLength);\n    analyser.getByteTimeDomainData(dataArray);\n\n    source.connect(analyser);\n    processor.connect(audioCtx.destination);\n\n\n// three.js initialization\n    const width = canvas.width, height = canvas.height;\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas\n    });\n    renderer.setSize( width, height );\n\n    \n    const camera = new THREE.PerspectiveCamera( 30, width / height, 0.1, 10000 );\n    camera.position.set( 50, 50, 50 );\n    camera.lookAt( 0, 0, 0 );\n\n    const scene = new THREE.Scene();\n\n    var axes = new THREE.AxesHelper(25);\n    scene.add(axes);\n\n    renderer.setPixelRatio(window.devicePixelRatio);\n    const bg_color = 0x000000;\n    renderer.setClearColor( bg_color, 0 );\n\n    let geometry = new THREE.Geometry();\n    geometry.verticesNeedUpdate = true;\n    geometry.elementsNeedUpdate = true;\n    let material = new THREE.PointsMaterial( { size: 1, sizeAttenuation: false } );\n    let dot: any;\n    const draw3d = () => {\n      let x = -16;\n      let z = -16;\n      for(var i = 0; i < 32; i++) {\n        for(var v = 0; v < 32; v++){\n          geometry.vertices.push(new THREE.Vector3( x, 0, z ) );\n          x++;\n          if(x >= 16){\n            x = -16;\n          }\n        }\n        z++;\n        if(z >= 16){\n          z = -16;\n        }\n      }\n      dot = new THREE.Points( geometry, material );\n      scene.add( dot );\n      renderer.render( scene, camera );      \n      processor.onaudioprocess = (e) => {\n        update3d();\n      }\n    }\n\n    const update3d = () => {\n      analyser.getByteTimeDomainData(dataArray);\n      const sliceWidth = canvas.width * 1.0 / bufferLength;\n      for(var i = 0; i < bufferLength; i++) {\n        const index = i;\n        const y = (dataArray[i] / 128 - 1) * height / 20;\n        dot.geometry.vertices[index].y = y;\n        dot.geometry.verticesNeedUpdate = true;\n        dot.geometry.elementsNeedUpdate = true;\n        dot.geometry.uvsNeedUpdate = true;\n        dot.geometry.normalsNeedUpdate = true;\n        dot.geometry.colorsNeedUpdate = true;\n      }\n      renderer.render( scene, camera );\n    }\n\n    draw3d();\n  };\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    }).then(handleSuccess);\n  }, []);\n\n  return (\n    <canvas id=\"canvas\" width=\"640\" height=\"480\" ref={ (elm) => { canvas = elm; } } />\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '103';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotNV );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor;\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\t\\tnormal = normalize( vTBN * mapN );\\n\\t\\t#else\\n\\t\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t\\t#endif\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tbox.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar boxMorphTargets = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tboxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.min );\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvector.fromBufferAttribute( morphAttribute, i );\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.addAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( attribute.array ),\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( attribute.array ),\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar morphA = new Vector3();\n\t\tvar morphB = new Vector3();\n\t\tvar morphC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t\tmorphA.set( 0, 0, 0 );\n\t\t\t\tmorphB.set( 0, 0, 0 );\n\t\t\t\tmorphC.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\ttempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t\ttempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t\ttempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\t\tmorphA.addScaledVector( tempA.sub( vA ), influence );\n\t\t\t\t\tmorphB.addScaledVector( tempB.sub( vB ), influence );\n\t\t\t\t\tmorphC.addScaledVector( tempC.sub( vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t\tvA.add( morphA );\n\t\t\t\tvB.add( morphB );\n\t\t\t\tvC.add( morphC );\n\n\t\t\t}\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar vr = renderer.vr;\n\t\tvar session = vr.getSession && vr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, textures );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities, textures ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete lists[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists[ scene.id ];\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ scene.id ] = {};\n\t\t\tlists[ scene.id ][ camera.id ] = list;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras[ camera.id ];\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras[ camera.id ] = list;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete renderStates[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tvar extension;\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReferenceType = 'stage';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\tvar renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\trenderer.getSize( currentSize );\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\tif ( isPresenting() === false ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t\tif ( isPresenting() ) animation.start();\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReference = null;\n\tvar frameOfReferenceType = 'stage';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfReference !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } );\n\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfReference = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, textures );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = null;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t}\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio );\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry && ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = ( iy == 0 ) ? 0.5 / widthSegments : ( ( iy == heightSegments ) ? - 0.5 / widthSegments : 0 );\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearCoat: <float>\n *  clearCoatRoughness: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.addAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n *\n *  This helper must be added as a child of the light\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tthis.type = 'RectAreaLightHelper';\n\n\tthis.light = light;\n\n\tthis.color = color; // optional hardwired color for the helper\n\n\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tLine.call( this, geometry, material );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Line.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t// prevent hue shift\n\t\tvar c = this.material.color;\n\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t}\n\n};\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v2 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\tactiveCubeFace: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t},\n\tactiveMipMapLevel: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLMultisampleRenderTarget, WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, DataTexture2DArray, DataTexture3D, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, AnimationLoader, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, PositionalAudioHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxGeometry as CubeGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, MeshMatcapMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, ACESFilmicToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RedFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, JSONLoader, SceneUtils, LensFlare };\n"],"sourceRoot":""}